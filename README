Jarvis is a simple voice command application written by Airen Surzyn as part of an application process.

Overview: Jarvis was conceived as a simple desktop client that could take voice commands as input and output responsive actions from the user's machine. The application moves between states which accept certain types of input and uses each state to form a coherent command which is translated into a Unix(no Windows implementation at the moment) command and run from terminal.

Motivation: The idea for Jarvis came from the popular comic book, now movie, series 'Iron Man' which I recently saw for the first time. This application was written as a submission/sample code project as I believed it would demonstrate key development skills for a young programmer in my position, namely:
  - basic programming acumen
  - the ability to find/decipher/implement unfamiliar third-party API's
  - familiarity with OOP concepts(encapsulation, inheritance/polymorphism, abstraction)
  - creativity(I was not able to implement everything I wanted to in the way that I had initially planned)

Third-party APIs/libraries
Outside of Java's standard libraries, in this project I make use of:
 - Sphinx4, created by Carnegie Mellon University
 - FreeTTS, created by Sun Microsystems Laboratories

User issues command -> Command is interpreted/vaildated -> Command is executed

How to use Jarvis:

The program goes between four states based on user input(raw audio) drawn roughly below:


State 0: Attention -> State 1: Action -> State 2: Object -> State 3: Confirmation


Each state corresponds to a limited “grammar” of potential words that move Jarvis into the next state or back to state 0 in the case of a “cancel” command or the completion of State 3. The design is very much like a Finite State Machine underpinned by the logical transitions indicated by user commands. Currently, Jarvis has been developed for use with Unix/Linux systems, but the Command classes are designed such that they are easily extendable to a Windows implementation.
State 0 - Attention:
- Recognizable words include [Jarvis, hey Jarvis, please]

State 1 - Action:
- Recognizable words include [open, close, cancel]

State 2 - Object:
- Recognizable words include [internet, command, eclipse, cancel]

State 3 - Confirmation:
- Recognizable words include [execute, cancel]

**Note - all words are contained in the corresponding .gram files
